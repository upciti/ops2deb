[tool.poetry]
name = "ops2deb"
version = "0"
description = "Build debian packages"
repository = "https://github.com/upciti/ops2deb"
license = "MIT"
keywords=["Debian", "DevOps", "Automation", "Kubernetes", "APT"]
authors = ["Upciti <support@upciti.com>"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Code Generators",
    "Typing :: Typed",
]
readme = "README.md"
packages = [
    {include = "ops2deb", from  = "src"},
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
httpx = ">=0.20.0"
semver = "3.0.2"
"ruamel.yaml" = "0.17.21"
python-debian = ">=0.1.42"
PyYAML = "^6"
typer = ">=0.6.1"
aiofiles = ">=0.1.9"
Jinja2 = "^3"
pydantic = "^2"
pyinstaller = { version = "5.13.2", optional = true }
unix-ar = "^0.2.1"
rich = "*"
dirsync = "^2.2.5"
zstandard = "*"

[tool.poetry.extras]
pyinstaller = ["pyinstaller"]

[tool.poetry.scripts]
ops2deb = "ops2deb.cli:main"

[tool.poetry.dev-dependencies]
pytest = "*"
mypy = "*"
taskipy = "*"
pytest-cov = "*"
black = "*"
safety = "*"
types-aiofiles = "*"
types-PyYAML = "*"
pytest-asyncio = ">=0.18.0"
fastapi = ">= 0.100"
ruff = "*"

[tool.taskipy.tasks]
check = """
black src tests\
 && ruff src tests --fix\
 && mypy src\
 && pytest --cov src tests\
"""
single_binary_application = """
pyinstaller --onefile src/ops2deb/__main__.py --name ops2deb -s
"""

[tool.black]
line-length = 90
target_version = ['py310']
exclude = '''
(
  /(
    | \.git
    | \.venv
    | \.mypy_cache
    | src/ops2deb/templates
  )/
)
'''

[tool.mypy]
files = "src"
strict = true
plugins = ["pydantic.mypy"]
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = ['unix_ar', "dirsync"]
ignore_missing_imports = true

[build-system]
requires = ["poetry>=1.0.2"]
build-backend = "poetry.masonry.api"

[tool.ruff]
line-length = 90
select = [
    "E",
    "F",
    "W",
    "I001",
]
src = ["src", "tests"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"src/ops2deb/templates.py" = ["E501", "W191"]
